# Copyright 2019 Manuel Schmidt 
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Published at https://github.com/mschmnet/elk-docker-vagrant/


version: '3.7'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.initial_master_nodes=es01
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms3g -Xmx3g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
      - esdata01_backup:/usr/share/elasticsearch/backup
      - ./config/elasticsearch/:/usr/share/elasticsearch/config/:ro
      - ./elasticsearch-healthcheck.sh:/usr/share/elasticsearch/elasticsearch-healthcheck.sh:ro
    ports:
      - 9200:9200
    networks:
      - esnet
    healthcheck:
      test: ["CMD", "bash", "/usr/share/elasticsearch/elasticsearch-healthcheck.sh", "es01"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s 
    stop_grace_period: 1m30s
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.0.1
    networks:
      - esnet
    volumes:
      - ./config/kibana/:/usr/share/kibana/config/:ro 
      - ./elasticsearch-healthcheck.sh:/usr/share/kibana/elasticsearch-healthcheck.sh:ro
      - ./wait-for-es01.sh:/usr/share/kibana/wait-for-es01.sh:ro
    depends_on:
      - es01
    ports:
      - 5601:5601
    command: ["bash", "wait-for-es01.sh", "es01", "/usr/local/bin/kibana-docker"]
    stop_grace_period: 1m30s
  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.0.1
    networks:
      - esnet
    volumes:
      - ./config/logstash/config:/usr/share/logstash/config/:ro
      - ./config/logstash/pipelines:/usr/share/logstash/pipelines/:ro
      - ./wait-for-es01.sh:/usr/share/logstash/wait-for-es01.sh:ro
      - ./elasticsearch-healthcheck.sh:/usr/share/logstash/elasticsearch-healthcheck.sh:ro
    depends_on:
      - es01
    ports:
      - 9600:9600
    command: ["bash", "wait-for-es01.sh", "es01", "/usr/local/bin/docker-entrypoint"]
    stop_grace_period: 1m30s
  fb01:
    container_name: fb01
    image: docker.elastic.co/beats/filebeat:7.0.1
    networks:
      - esnet
    volumes:
      - ./wait-for-es01.sh:/usr/share/filebeat/wait-for-es01.sh:ro
      - ./config/fb01/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./elasticsearch-healthcheck.sh:/usr/share/filebeat/elasticsearch-healthcheck.sh:ro
      - ./start-fb.sh:/usr/share/filebeat/start-fb.sh:ro
      - /down/:/down/:ro
    depends_on:
      - logstash 
      - es01
    command: ["bash", "wait-for-es01.sh", "es01", "bash", "start-fb.sh"]
    stop_grace_period: 1m30s
  fb02:
    container_name: fb02
    image: docker.elastic.co/beats/filebeat:7.0.1
    networks:
      - esnet
    volumes:
      - ./wait-for-es01.sh:/usr/share/filebeat/wait-for-es01.sh:ro
      - ./config/fb02/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./elasticsearch-healthcheck.sh:/usr/share/filebeat/elasticsearch-healthcheck.sh:ro
      - ./start-fb.sh:/usr/share/filebeat/start-fb.sh:ro
      - /down/:/down/:ro
    depends_on:
      - logstash 
      - es01
    command: ["bash", "wait-for-es01.sh", "es01", "bash", "start-fb.sh"]
    stop_grace_period: 1m30s
volumes:
  esdata01:
    driver: local 
    driver_opts:
      type: none
      device: /data/elk/
      o: bind
  esdata01_backup:
    driver: local 
    driver_opts:
      type: none
      device: /data/elk_backup/
      o: bind


networks:
  esnet:
